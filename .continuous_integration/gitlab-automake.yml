include:
  - .continuous_integration/gitlab-templates.yml

stages:
  - Build
  - Test
  - Tutorials
  - Applications
  - Benchmarks

Build:
  extends: .BeforeScript
  stage: Build
  allow_failure: false
  script:
    - singularity exec -e --bind "$SINGULARITY_BINDDIR" $SINGULARITY_IMAGEDIR/${IMAGE_TAG} python3 -m compileall -f ./
    - singularity exec -e --bind "$SINGULARITY_BINDDIR" $SINGULARITY_IMAGEDIR/${IMAGE_TAG} bash <<< "CC=${CC} CXX=${CXX} python3 configure.py ${CONFIGURATION_OPTIONS}"
    - singularity exec -e --bind "$SINGULARITY_BINDDIR" $SINGULARITY_IMAGEDIR/${IMAGE_TAG} make -j $(nproc --all)
  artifacts:
    paths:
      - ./*
    exclude:
      - ".git*"
      - ".git/**/*"
    expire_in: 2 hours
  retry: 0

UnitTests:
  extends:
    - .BeforeScript
    - .SanitiseAutomake
  stage: Test
  allow_failure: false
  script:
    - singularity exec -e --bind "$SINGULARITY_BINDDIR" $SINGULARITY_IMAGEDIR/${IMAGE_TAG} make check
  needs:
    - job: Build
  dependencies:
    - Build
  retry: 0

ExaHyPE2:
  extends:
    - .BeforeScript
    - .SanitiseAutomake
  stage: Tutorials
  allow_failure: false
  parallel:
    matrix:
    - tutorial: [euler, acoustic, elastic, advection, swe]
  script:
    - singularity exec -e --bind "$SINGULARITY_BINDDIR" $SINGULARITY_IMAGEDIR/${IMAGE_TAG} bash <<< "cd tutorials/exahype2/$tutorial; PYTHONPATH=$CI_PROJECT_DIR/python python3 $tutorial.py"
  needs:
    - job: Build
  dependencies:
    - Build
  rules:
    - if: '$CI_COMMIT_BRANCH == "p4"'
  retry: 0

ExaHyPE2_Euler:
  extends:
    - .BeforeScript
    - .SanitiseAutomake
  stage: Applications
  allow_failure: false
  parallel:
    matrix:
    - dimensions: [2, 3]
      build_type: [Debug, Release]
      solver_type: [FVRusanovGlobalAdaptiveEnclave, RKDGRusanovGlobalAdaptiveEnclave, ADERDGRusanovGlobalAdaptive]
  script:
    - singularity exec -e --bind "$SINGULARITY_BINDDIR" $SINGULARITY_IMAGEDIR/${IMAGE_TAG} bash <<< "cd applications/exahype2/euler; PYTHONPATH=$CI_PROJECT_DIR/python python3 euler.py -s $solver_type -d $dimensions -m $build_type"
  needs:
    - job: Build
  dependencies:
    - Build
  rules:
    - if: '$CI_COMMIT_BRANCH == "p4"'
  retry: 0

ExaHyPE2_Advection:
  extends:
    - .BeforeScript
    - .SanitiseAutomake
  stage: Applications
  allow_failure: false
  parallel:
    matrix:
    - dimensions: [2, 3]
      build_type: [Debug, Release]
      solver_type: [FVRusanovGlobalAdaptiveEnclave, RKDGRusanovGlobalAdaptiveEnclave, ADERDGRusanovGlobalAdaptive]
  script:
    - singularity exec -e --bind "$SINGULARITY_BINDDIR" $SINGULARITY_IMAGEDIR/${IMAGE_TAG} bash <<< "cd applications/exahype2/advection; PYTHONPATH=$CI_PROJECT_DIR/python python3 advection.py -s $solver_type -d $dimensions -m $build_type"
  needs:
    - job: Build
  dependencies:
    - Build
  rules:
    - if: '$CI_COMMIT_BRANCH == "p4"'
  retry: 0

ExaHyPE2_AcousticWave:
  extends:
    - .BeforeScript
    - .SanitiseAutomake
  stage: Applications
  allow_failure: false
  parallel:
    matrix:
    - dimensions: [2, 3]
      build_type: [Debug, Release]
      solver_type: [FVRusanovGlobalAdaptiveEnclave, RKDGRusanovGlobalAdaptiveEnclave, ADERDGRusanovGlobalAdaptive]
  script:
    - singularity exec -e --bind "$SINGULARITY_BINDDIR" $SINGULARITY_IMAGEDIR/${IMAGE_TAG} bash <<< "cd applications/exahype2/acoustic-wave; PYTHONPATH=$CI_PROJECT_DIR/python python3 acoustic-wave.py -s $solver_type -d $dimensions -m $build_type"
  needs:
    - job: Build
  dependencies:
    - Build
  rules:
    - if: '$CI_COMMIT_BRANCH == "p4"'
  retry: 0

ExaHyPE2_ElasticWave:
  extends:
    - .BeforeScript
    - .SanitiseAutomake
  stage: Applications
  allow_failure: false
  parallel:
    matrix:
    - dimensions: [2, 3]
      build_type: [Debug, Release]
      solver_type: [FVRusanovGlobalAdaptiveEnclave, RKDGRusanovGlobalAdaptiveEnclave, ADERDGRusanovGlobalAdaptive]
  script:
    - singularity exec -e --bind "$SINGULARITY_BINDDIR" $SINGULARITY_IMAGEDIR/${IMAGE_TAG} bash <<< "cd applications/exahype2/elastic-wave; PYTHONPATH=$CI_PROJECT_DIR/python python3 elastic-wave.py -s $solver_type -d $dimensions -m $build_type"
  needs:
    - job: Build
  dependencies:
    - Build
  rules:
    - if: '$CI_COMMIT_BRANCH == "p4"'
  retry: 0

ExaHyPE2_Kernels:
  extends:
    - .BeforeScript
    - .SanitiseAutomake
  stage: Benchmarks
  allow_failure: false
  parallel:
    matrix:
    - benchmark: [euler, acoustic-wave, elastic-wave, advection]
  script:
    - singularity exec -e --bind "$SINGULARITY_BINDDIR" $SINGULARITY_IMAGEDIR/${IMAGE_TAG} bash <<< "cd benchmarks/exahype2/$benchmark/kernel-benchmarks; PYTHONPATH=$CI_PROJECT_DIR/python python3 kernel-benchmarks-fv-rusanov.py -d 2 -ps 16 -p 128 -a -1 -s 1 -e -fpe -m Release"
    - singularity exec -e --bind "$SINGULARITY_BINDDIR" $SINGULARITY_IMAGEDIR/${IMAGE_TAG} bash <<< "cd benchmarks/exahype2/$benchmark/kernel-benchmarks; ./kernel-benchmarks-fv-rusanov-2d-ps-16-Release"
  needs:
    - job: Build
  dependencies:
    - Build
  rules:
    - if: '$CI_COMMIT_BRANCH == "p4"'
  retry: 0

ExaHyPE2_SBH:
  extends:
    - .BeforeScript
    - .SanitiseAutomake
  stage: Benchmarks
  allow_failure: false
  script:
    - singularity exec -e --bind "$SINGULARITY_BINDDIR" $SINGULARITY_IMAGEDIR/${IMAGE_TAG} bash <<< "cd benchmarks/exahype2/ccz4/performance-testbed; PYTHONPATH=$PYTHONPATH:$CI_PROJECT_DIR/python:$CI_PROJECT_DIR/applications/exahype2/ccz4 python3 performance_testbed.py -et 0.01"
    - singularity exec -e --bind "$SINGULARITY_BINDDIR" $SINGULARITY_IMAGEDIR/${IMAGE_TAG} bash <<< "cd benchmarks/exahype2/ccz4/performance-testbed; ./peano4_test"
  needs:
    - job: Build
  dependencies:
    - Build
  rules:
    - if: '$CI_COMMIT_BRANCH == "p4"'
  retry: 0

ExaHyPE2_SBH_Coupled:
  extends:
    - .BeforeScript
    - .SanitiseAutomake
  stage: Benchmarks
  allow_failure: false
  script:
    - singularity exec -e --bind "$SINGULARITY_BINDDIR" $SINGULARITY_IMAGEDIR/${IMAGE_TAG} bash <<< "cd benchmarks/exahype2/ccz4/single-black-hole; PYTHONPATH=$PYTHONPATH:$CI_PROJECT_DIR/python:$CI_PROJECT_DIR/applications/exahype2/ccz4 python3 performance-studies.py -lbm tailored -s fd4-rk1-limited-ps-3 --scheduler native-no-priorities --trees 6"
    - singularity exec -e --bind "$SINGULARITY_BINDDIR" $SINGULARITY_IMAGEDIR/${IMAGE_TAG} bash <<< "cd benchmarks/exahype2/ccz4/single-black-hole; OMP_NUM_THREADS=1 ./peano_sbh"
  needs:
    - job: Build
  dependencies:
    - Build
  rules:
    - if: '$CI_COMMIT_BRANCH == "p4"'
  retry: 0
