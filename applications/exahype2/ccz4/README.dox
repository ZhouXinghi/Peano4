/**

@page applications_exahype2_ccz4 First-order CCZ4 experiments


This page documents some of our first-order CCZ4 experiments. All the 
experiments assume @ref exahype_home "a working ExaHyPE 2/Peano 4 installation".
As our experiments are canonical expensive, it makes sense to enable MPI+X
parallelisation.

Please use

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
export PYTHONPATH=../../../python/:.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

before you start experimenting with this project.


## Single puncture node benchmark setup

@image html black-holes.png

The smallest reasonable single puncture (black hole) simulation we typically
run can be found below. We amend the end time (et) according to your need. 
With an end time of 0.01 you will not see anything interesting, but you get
enough time steps for some first performance assessment. 

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
python3 ccz4.py -impl fd4-rk1-adaptive-enclave -s single-puncture -maxh 0.4 -minh 0.04 -ps 6 -plt 0 -et 0.01 -exn test --domain_r 9.0 --ReSwi 7 -cfl 0.1 --KOSigma 8.0 -sommerfeld
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


## Two orbiting black holes

@image html two-black-holes.png

THe following command line builds a "productable" rotating binary black hole simulation.
Please notice this is a rather expensive setup for performance analysis and other tests.
(Its cell count is roughly twice as big as the single black hole setup above)

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
python3 ccz4.py -impl fd4-rk1-adaptive -s two-punctures -ext Psi4 -maxh 0.4 -minh 0.04 -ps 8 -plt 0 -et 0.01 -exn test --domain_r 12.0 --ReSwi 6 -cfl 0.1 --KOSigma 8.0 --BBHType 2 -sommerfeld
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

## Postprocessing

We have to provide some guidance later.

###VTU output
By change the plt arguement above to a non-zero value allows you to output snapshot per [plt] code time. 
It will always output snapshot at the beginning and the end of the simulation. The output files can be merged 
and converted to vtu files using the command lines like

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
module unload python/2.7.15
module load python/3.6.5 paraview/5.8.1
export PYTHONPATH=/cosma/home/dp004/dc-zhan3/Peano/python/
python3 /cosma/home/dp004/dc-zhan3/Peano/python/peano4/visualisation/merge_partial_patch_files.py --meta-file=./solution-FiniteVolumeCCZ4.peano-patch-file 
pvpython /cosma/home/dp004/dc-zhan3/Peano/python/peano4/visualisation/render.py merged_meta_file.peano-patch-file 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Those vtu files can be visulized using standard software, such as Paraview.

 */
 
 