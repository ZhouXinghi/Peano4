/**

@page applications_exahype2_swe_chile_tsunami 2010 Chile Tsunami

<div style="display: flex;">
    <div style="flex: 50%; padding: 5px;">
        \image html chile_gebco_usgs_500m_bath_netCDF.png
    </div>
    <div style="flex: 50%; padding: 5px;">
        \image html chile_gebco_usgs_500m_displ_netCDF.png
    </div>
</div>

<div style="display: flex;">
    <div style="flex: 50%; padding: 5px;">
        \image html ChileDomain.png
    </div>
    <div style="flex: 50%; padding: 5px;">
        \image html ChileDomainWireframe.png
    </div>
</div>

\image html ChileTsunami.gif

## How to Build and Run

For a general overview and all options on how to retrieve and configure the project, refer to @ref page_installation.

### Using CMake

    cd myPeanoDirectory && mkdir build && cd build
    CC=gcc CXX=g++ cmake .. -DWITH_MULTITHREADING=omp -DWITH_NETCDF=ON -DENABLE_EXAHYPE=ON -DENABLE_LOADBALANCING=ON -DENABLE_BLOCKSTRUCTURED=ON
    make -j && make test
    cd applications/exahype2/swe/chile-tsunami/
    export PYTHONPATH=$PYTHONPATH:myPeanoDirectory/python
    python3 chile-tsunami.py
    ./ExaHyPE2-SWE-FWaveRiemannGlobalAdaptiveFV-Release

### Using Automake

    cd myPeanoDirectory
    libtoolize; aclocal; autoconf; autoheader; cp src/config.h.in .; automake --add-missing
    CFLAGS="-fopenmp" CC=gcc CXXFLAGS="-std=c++20 -fopenmp" CXX=g++ LDFLAGS="-fopenmp" \
    ./configure --with-multithreading=omp --with-netcdf --enable-exahype --enable-loadbalancing --enable-blockstructured
    make -j && make check
    cd applications/exahype2/swe/chile-tsunami/
    export PYTHONPATH=$PYTHONPATH:myPeanoDirectory/python
    python3 chile-tsunami.py
    ./ExaHyPE2-SWE-FWaveRiemannGlobalAdaptiveFV-Release

Where `CC=gcc CXX=g++` can be any set of compilers.

This scenario requires the NetCDF library.

## Visualise the Simulation Output

    python3 chile-tsunami.py --visualise

*/
