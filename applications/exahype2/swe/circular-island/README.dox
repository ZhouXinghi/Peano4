/**

@page applications_exahype2_swe_circular_island Solitary wave runup and run-down on a circular island

In this scenario, the initial wave is modeled via the following analytic definition by Synolakis:

\f{eqnarray*}{
\eta(x, y, 0) = \frac{A}{h_0} \text{sech}^2(\gamma(x - 2.5m))
\f}

Where @f$ A = 0.064m @f$ is the wave amplitude, @f$ h_0 = 0.32m @f$ is the initial still water level, and

\f{eqnarray*}{
\gamma = \frac{3A}{4h_0}
\f}

The island is a cone given as

\f{eqnarray*}{
b(x, y) = 0.93 \left(1 - \frac{r}{r_c} \right) \text{if } r \leq{} r_c
\f}

Where @f$ r = \sqrt{(x - x_c)^2 + (y - y_c)^2} @f$, @f$ r_c = 3.6m @f$, and is centered at @f$ (x_c, y_c) = (12.5, 15)m @f$.

The cone is installed on a flat bathymetry. The fluid is confined within four solid walls.

Taken from https://doi.org/10.48550/arXiv.1607.04547

## How to Build and Run

For a general overview and all options on how to retrieve and configure the project, refer to @ref page_installation.

### Using CMake

    cd myPeanoDirectory && mkdir build && cd build
    CC=gcc CXX=g++ cmake .. -DWITH_MULTITHREADING=omp -DENABLE_EXAHYPE=ON -DENABLE_LOADBALANCING=ON -DENABLE_BLOCKSTRUCTURED=ON
    make -j && make test
    cd applications/exahype2/swe/circular-island/
    export PYTHONPATH=$PYTHONPATH:myPeanoDirectory/python
    python3 circular-island.py
    ./ExaHyPE2-SWE-HLLEMRiemannGlobalAdaptiveFV-Release

### Using Automake

    cd myPeanoDirectory
    libtoolize; aclocal; autoconf; autoheader; cp src/config.h.in .; automake --add-missing
    CFLAGS="-fopenmp" CC=gcc CXXFLAGS="-std=c++20 -fopenmp" CXX=g++ LDFLAGS="-fopenmp" \
    ./configure --with-multithreading=omp --enable-exahype --enable-loadbalancing --enable-blockstructured
    make -j && make check
    cd applications/exahype2/swe/circular-island/
    export PYTHONPATH=$PYTHONPATH:myPeanoDirectory/python
    python3 circular-island.py
    ./ExaHyPE2-SWE-HLLEMRiemannGlobalAdaptiveFV-Release

Where `CC=gcc CXX=g++` can be any set of compilers.

## Visualise the Simulation Output

    python3 circular-island.py --visualise

*/
