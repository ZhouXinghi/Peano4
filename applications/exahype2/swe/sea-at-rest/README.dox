/**

@page applications_exahype2_swe_sea_at_rest Sea at Rest

Scenario simulating a sea at rest.
There is a discontinuity parallel to the y-axis at half the length of the x-size of the domain.
Scenario consisting of just a bathymetry discontinuity whilst maintaining a flat free surface.
There should not be any waves being artificially created in this scenario.

## How to Build and Run

For a general overview and all options on how to retrieve and configure the project, refer to @ref page_installation.

### Using CMake

    cd myPeanoDirectory && mkdir build && cd build
    CC=gcc CXX=g++ cmake .. -DWITH_MULTITHREADING=omp -DENABLE_EXAHYPE=ON -DENABLE_LOADBALANCING=ON -DENABLE_BLOCKSTRUCTURED=ON
    make -j && make test
    cd applications/exahype2/swe/sea-at-rest/
    export PYTHONPATH=$PYTHONPATH:myPeanoDirectory/python
    python3 sea-at-rest.py
    ./ExaHyPE2-SWE-FWaveRiemannGlobalAdaptiveFV-Release

### Using Automake

    cd myPeanoDirectory
    libtoolize; aclocal; autoconf; autoheader; cp src/config.h.in .; automake --add-missing
    CFLAGS="-fopenmp" CC=gcc CXXFLAGS="-std=c++20 -fopenmp" CXX=g++ LDFLAGS="-fopenmp" \
    ./configure --with-multithreading=omp --enable-exahype --enable-loadbalancing --enable-blockstructured
    make -j && make check
    cd applications/exahype2/swe/sea-at-rest/
    export PYTHONPATH=$PYTHONPATH:myPeanoDirectory/python
    python3 sea-at-rest.py
    ./ExaHyPE2-SWE-FWaveRiemannGlobalAdaptiveFV-Release

Where `CC=gcc CXX=g++` can be any set of compilers.

## Visualise the Simulation Output

    python3 sea-at-rest.py --visualise

*/
