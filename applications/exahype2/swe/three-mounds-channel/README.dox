/**

@page applications_exahype2_swe_three_mounds_channel Flooding problem in a channel with three mounds

The three mounds in the channel @f$ \Omega = 75Ã—30m^2 @f$, are defined by the function @f$ b(x, y) = max(0.0, m1, m2, m3) @f$ where

\f{align*}{
m_1 &= 1.0 - 0.10 \sqrt{(x - 30.0)^2 + (y - 22.5)^2} \\
m_2 &= 1.0 - 0.10 \sqrt{(x - 30.0)^2 + (y - 7.50)^2} \\
m_3 &= 2.8 - 0.28 \sqrt{(x - 47.5)^2 + (y - 15.0)^2}
\f}

The flooding is triggered by a dam break at @f$ t = 0 s @f$.

Taken from https://doi.org/10.48550/arXiv.1607.04547

## How to Build and Run

For a general overview and all options on how to retrieve and configure the project, refer to @ref page_installation.

### Using CMake

    cd myPeanoDirectory && mkdir build && cd build
    CC=gcc CXX=g++ cmake .. -DWITH_MULTITHREADING=omp -DENABLE_EXAHYPE=ON -DENABLE_LOADBALANCING=ON -DENABLE_BLOCKSTRUCTURED=ON
    make -j && make test
    cd applications/exahype2/swe/three-mounds-channel/
    export PYTHONPATH=$PYTHONPATH:myPeanoDirectory/python
    python3 three-mounds-channel.py
    ./ExaHyPE2-SWE-HLLEMRiemannGlobalAdaptiveFV-Release

### Using Automake

    cd myPeanoDirectory
    libtoolize; aclocal; autoconf; autoheader; cp src/config.h.in .; automake --add-missing
    CFLAGS="-fopenmp" CC=gcc CXXFLAGS="-std=c++20 -fopenmp" CXX=g++ LDFLAGS="-fopenmp" \
    ./configure --with-multithreading=omp --enable-exahype --enable-loadbalancing --enable-blockstructured
    make -j && make check
    cd applications/exahype2/swe/three-mounds-channel/
    export PYTHONPATH=$PYTHONPATH:myPeanoDirectory/python
    python3 three-mounds-channel.py
    ./ExaHyPE2-SWE-HLLEMRiemannGlobalAdaptiveFV-Release

Where `CC=gcc CXX=g++` can be any set of compilers.

## Visualise the Simulation Output

    python3 three-mounds-channel.py --visualise

*/
