
template <typename QStoreType>
QStoreType exahype2::dg::evaluatePolynomial(
  const peano4::datamanagement::CellMarker&    marker,
  int                                          order,
  const double* __restrict__                   QuadratureNodes1d,
  int                                          unknownsPerDoF,
  const QStoreType* __restrict__               Q,
  const tarch::la::Vector<Dimensions,double>&  x,
  int                                          unknown
) {
  QStoreType result = 0.0;
  dfor(currentDoF,order+1) {
    double denominator = 1.0;
    double enumerator  = 1.0;
    for (int d=0; d<Dimensions; d++) {
      for (int i=0; i<order+1; i++) {
        if ( i!=currentDoF(d) ) {
          double normalisedQuadratePointDistance = QuadratureNodes1d[currentDoF(d)]-QuadratureNodes1d[i];
          double distanceToQuadraturePoint1d     = x(d)-( QuadratureNodes1d[i]*marker.h()(d)+marker.getOffset()(d) );
          denominator *= normalisedQuadratePointDistance * marker.h()(d);
          enumerator  *= distanceToQuadraturePoint1d;
        }
      }
    }
    int dofLinearised = peano4::utils::dLinearised(currentDoF,order+1);
    result += enumerator/denominator * Q[ dofLinearised * unknownsPerDoF + unknown ];
  }
  return result;
}