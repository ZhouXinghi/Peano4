#include "legacy/hydro_dimensions.h"
#include "legacy/kernel_hydro.h"
#include "swift2/kernels/ParticleUpdatePredicates.h"
#include "swift2/kernels/SmoothingLengthComputation.h"
#include "tarch/accelerator/accelerator.h"
#include "tarch/compiler/CompilerSpecificSettings.h"
#include "toolbox/particles/MultiscaleTransitions.h"






template <typename Particle>
bool swift2::kernels::forceKernelDistanceCheck(
  Particle* __restrict__ localParticle, const Particle* __restrict__ activeParticle
) {

  const double h_a = localParticle->getSmoothingLength();

  // Distance between the two particles
  tarch::la::Vector<Dimensions, double> dx = localParticle->getX() - activeParticle->getX();
  const double                          r  = tarch::la::norm2(dx);

  // Get actual interaction radius
  const double iactR = kernel_gamma * h_a;

  const bool result = tarch::la::smaller(r, iactR);

  return result;
}

