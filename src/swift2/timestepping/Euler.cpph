#include "swift2/kernels/ParticleUpdatePredicates.h"


template <typename Particle>
void swift2::timestepping::computeExplicitEulerWithGlobalTimeStepSize(
  const peano4::datamanagement::VertexMarker&  marker,
  Particle&                                    particle
) {
  double timeStepSize = Particle::getSpecies().getMinTimeStepSize();

  if ( ::swift2::kernels::localParticleCanBeUpdatedAndMovedInVertexKernel(marker, particle) ) {
    particle.setX( particle.getX() + timeStepSize * particle.getV() );
    particle.setV( particle.getV() + timeStepSize * particle.getA() );
    particle.setMoveState(Particle::MoveState::Moved);
  }
}


template <typename Particle>
void swift2::timestepping::computeExplicitEulerCromerWithGlobalTimeStepSize(
  const peano4::datamanagement::VertexMarker&  marker,
  Particle&                                    particle
) {
  double timeStepSize = Particle::getSpecies().getMinTimeStepSize();

  if ( ::swift2::kernels::localParticleCanBeUpdatedAndMovedInVertexKernel(marker, particle) ) {
    particle.setV( particle.getV() + timeStepSize * particle.getA() );
    particle.setX( particle.getX() + timeStepSize * particle.getV() );
    particle.setMoveState(Particle::MoveState::Moved);
  }
}

