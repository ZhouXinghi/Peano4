// **********************************************************************************************
// ***                                     !!!WARNING!!!                                      ***
// *** WARNING: AUTO GENERATED FILE! DO NOT MODIFY BY HAND! YOUR CHANGES WILL BE OVERWRITTEN! ***
// ***                                     !!!WARNING!!!                                      ***
// ***                  Generated by Peano's Python API: www.peano-framework.org              ***
// **********************************************************************************************
#pragma once

#include <limits>
#include <string>

#include <bitset>
#include "tarch/la/Vector.h" 
#include "peano4/utils/Globals.h" 


namespace tutorials{
namespace exahype2{
namespace advection{


  const tarch::la::Vector<Dimensions,double> DomainOffset = {0.0,0.0};
  const tarch::la::Vector<Dimensions,double> DomainSize = {1.0,1.0};
  constexpr auto MinTerminalTime = 1.0;
  constexpr auto MaxTerminalTime = 1.0;
  constexpr auto FirstPlotTimeStamp = 0.0;
  constexpr auto TimeInBetweenPlots = 0.01;
  constexpr auto PlotterPrecision = 5;
  const std::bitset<2> PeriodicBC = 0;
  const std::string BuildInformation = "python3  advection.py";
  const std::string ConfigureInformation = "$ ./configure --with-multithreading=omp --with-gpu=omp --enable-exahype --enable-loadbalancing --enable-blockstructured CC=clang CXX=clang++ 'CXXFLAGS=-std=c++17 -O3 -w -fopenmp -fopenmp-targets=nvptx64-nvidia-cuda -Xopenmp-target=nvptx64-nvidia-cuda -march=sm_89' 'LDFLAGS=-fopenmp -fopenmp-targets=nvptx64-nvidia-cuda -Xopenmp-target=nvptx64-nvidia-cuda -march=sm_89'";


}
}
}

